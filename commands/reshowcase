#!/usr/bin/env node

let webpack = require("webpack");
let WebpackDevServer = require("webpack-dev-server");
let path = require("path");
let os = require("os");
let HtmlWebpackPlugin = require("html-webpack-plugin");
let child_process = require("child_process");

if (typeof process.argv[2] !== "string") {
  console.error("You need to pass the path to the entry point");
  process.exit(1);
}

let config;
try {
  config = require(path.join(process.cwd(), ".reshowcase/config.js"));
} catch (err) {
  config = {};
}

let compiler = webpack({
  mode: "development",
  entry: {
    index: path.join(process.cwd(), process.argv[2])
  },
  output: {
    path: os.tmpdir(),
    publicPath: "/",
    filename: "reshowcase[fullhash].js",
    globalObject: "this",
    chunkLoadingGlobal: "reshowcase__d"
  },
  module: config.module,
  plugins: [
    ...(config.plugins ? config.plugins : []),
    new HtmlWebpackPlugin({
      template: process.argv.find(item => item.startsWith("--template="))
        ? path.join(
            process.cwd(),
            process.argv
              .find(item => item.startsWith("--template="))
              .replace(/--template=/, "")
          )
        : path.join(__dirname, "../src/index.html")
    })
  ]
});

let port = parseInt(
  process.argv.find(item => item.startsWith("--port="))
    ? process.argv
        .find(item => item.startsWith("--port="))
        .replace(/--port=/, "")
    : 9000,
  10
);

let server = new WebpackDevServer(compiler, {
  compress: true,
  port: port,
  historyApiFallback: {
    index: "/index.html"
  },
  stats: "errors-only"
});

server.listen(port, "0.0.0.0");

child_process.exec("open http://localhost:" + port, () => {});
